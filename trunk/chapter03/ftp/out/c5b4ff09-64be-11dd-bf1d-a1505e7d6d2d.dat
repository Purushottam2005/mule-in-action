
Summary of changes from v2.6.0 to v2.6.1
============================================

<luca@libero.it>
	[PATCH] USB: add W996[87]CF driver

<david@csse.uwa.edu.au>
	[PATCH] USB: Add Lego USB Infrared Tower driver

<greg@kroah.com>
	[PATCH] USB: fix up formatting problems in the legotower driver
	
	Basically fixed up spaces to tabs problems.

<greg@kroah.com>
	[PATCH] USB: give legotower driver a real USB minor, and remove unneeded ioctl function.

<khali@linux-fr.org>
	[PATCH] I2C: Add lm83 chip driver

<elf@com.rmk.(none)>
	[ARM] Add ARMv4T cache support for decompressor
	
	Patch from Marc Singer
	
	Add generic ARMv4T ID entry, remove ARM920 specific ID cache type
	entry.

<nico@org.rmk.(none)>
	[ARM PATCH] 1678/1: correct and better do_div() implementation for ARM
	
	Patch from Nicolas Pitre
	
	Here's a rewrite of the ARM do_div() implementation.  It is much
	faster and smarter than the current code, and it also takes
	advantage of ARMv5+ instructions when target processor allows it.
	
	The current code also deserves to be killed ASAP since it overflows
	and fails to compute correct values in many cases.  For example:
	
		u64 n = 2200000001;
		u32 x = 2200000000;
		u32 r = do_div(n, x);
	
	This currently returns n = 41 and r = 46829569 which is obviously bad.
	
	Another failing example is n=15000000000000000000 and x=3000000000.

<greg@kroah.com>
	[PATCH] USB: 64bit fixups for legousbtower driver

<alex@de.rmk.(none)>
	[ARM PATCH] 1693/1: Shark: new defconfig
	
	Patch from Alexander Schulz
	
	This patch updates the defconfig file for the Shark

<david-b@pacbell.net>
	[PATCH] USB: usbcore, better heuristic for choosing configs
	
	Until now, the Linux-USB core has always chosen the first device
	configuration, even when there was a choice.  In 2.4 kernels,
	device driver probe() routines were allowed to override that
	initial policy decisions.  But 2.6 kernels can't do that from
	probe() routines, causing problems with some CDC-ACM modems
	where the first config uses MSFT-proprietary protocols.
	
	This patch switches to a smarter heuristic:  Linux now prefers
	standard interface classes when there's a choice.  So those
	CDC-ACM modems don't need a "write bConfigurationValue in sysfs"
	step when they are connected; they act just like on 2.4 kernels.
	(And sysfs can still be used to handle any problem cases.)

<dhollis@davehollis.com>
	[PATCH] USB: ax8817x additional ethtool support in usbnet
	
	* Provide operational link testing via ethtool
	* Provide get/set features via ethtool.

<davej@redhat.com>
	[CPUFREQ] Add support for 1GHz Centrino speedstep
	From: Youichi Aso <aso@granite.phys.s.u-tokyo.ac.jp>

<davej@redhat.com>
	[AGPGART] Handle multiple AMD64 AGP bridges correctly on UP.
	We only care about the first bridge in UP, but we still tried to continue..

<davej@redhat.com>
	[AGPGART] Fix return check on request_mem_region()
	Do things the way every other user of this function does.
	Spotted by Arjan with a suitably pedantic gcc.

<greg@kroah.com>
	[PATCH] USB: add support for Protego devices to ftdi_sio driver

<davej@redhat.com>
	[CPUFREQ] Fix powernow-k8 policy usage.
	As the powernow-k8 driver uses the ->target and not the
	->setpolicy callback, cpufreq_policy->policy is always zero. Checking for it
	in the powernow-k8 driver always returned "false". So we can easily remove
	this invalid check (and the #warning added to denote this).
	
	From Dominik Brodowski

<davej@redhat.com>
	[CPUFREQ] Abort if there is a failure in aquiring "ownership" of the SMI speedstep interface.
	
	From Dominik Brodowski

<davej@redhat.com>
	[AGPGART] Fix two nasty bugs in the K8 AGP support:
	From Andi.
	                                                                  
	- Don't kill AGP in the IOMMU code (Badari Pulavarty)
	- Do checking for overlapping aperture/pci resource correctly
	(thanks to Arjan van de Ven for noticing)

<tspat@de.ibm.com>
	[COMPAT]: Add support for AIO system calls, with help from Arun Sharma (arun.sharma@intel.com).

<tspat@de.ibm.com>
	[S390]: Add in compat AIO syscall support.

<davem@nuts.ninka.net>
	[SPARC64]: Add in compat AIO syscall support.

<davej@redhat.com>
	[CPUFREQ] Use different attack with the Powernow-K7 bad bios problems.
	Remove dupes by using a webpage instead of flooding me with lots of
	similar emails.
	 

<rmk@flint.arm.linux.org.uk>
	[ARM] Remove unnecessary head-integrator.o object.
	
	Integrator boot loaders pass all the relevant information to the
	kernel, there is no need to add code to provide this information.

<rmk@flint.arm.linux.org.uk>
	[ARM] Correct flush_user_cache_range comments.

<davej@redhat.com>
	[AGPGART] Fix MAX_HAMMER_GARTS off by one.
	James Jones spotted that on an 8-way hammer, we would print the
	'too many northbridges'. We should abort at 1 > max, not at max.

<davej@redhat.com>
	[CPUFREQ] Fix rounding in longhaul.
	The FSB guessing screwed up sometimes.
	If cpu_mhz was greater than the guess we returned zero.

<davej@redhat.com>
	[AGPGART] Mask memory after allocation
	We missed a few cases where we need to do this.
	Fix from Alan Hourihane.

<dave@thedillows.org>
	Bug fixes:
	* Avoid short timeouts when waiting for a reset
	* Fix issue with loading runtime image on newer versions of the sleep image
	* Fix link status reporting

<jgarzik@redhat.com>
	[libata] Fix PDC20621: we only have one Host DMA engine, not one per port
	
	Whoops.  So, we need to queue HDMA transactions internally.

<davidm@tiger.hpl.hp.com>
	ia64: Fix a bug in sigtramp() which corrupted ar.rnat when unwinding
		across a signal trampoline (in user space).  Reported by
		Laurent Morichetti.

<yoshfuji@linux-ipv6.org>
	[IPV6]: Fix ipv4 mapped address calculation in udpv6_sendmsg().

<herbert@gondor.apana.org.au>
	[XFRM]: Handle device down/unregister events.
	
	This patch makes us prune all bundles containing devices being shut down
	or removed.  It also merges two existing functions that walk bundles
	looking for things to delete.

<bcollins@debian.org>
	[SPARC64]: Fix kernel-debug config option dependencies.

<davem@nuts.ninka.net>
	[SPARC64]: Update defconfig.

<herbert@gondor.apana.org.au>
	[XFRM]: Check whether a dst is still valid before adding it to a bundle.

<hirofumi@mail.parknet.co.jp>
	[TCP]: Fix OOPS when seeking in /proc/net/tcp.
	
	Forgotten initialization of st->state in tcp_seq_start().

<laforge@netfilter.org>
	[NETFILTER]: Sanitize ip_ct_tcp_timeout_close_wait value, from 2.4.x

<zaitcev@redhat.com>
	[SPARC]: When sun4c OOPSes, do not watchdog reset by accident.

<herbert@gondor.apana.org.au>
	[SCTP]: Fix sm.h/sctp.h header include loop.

<davej@redhat.com>
	[AGPGART] Merge missing chunk of NVIDIA nForce agpgart driver.
	This bit has been in the 2.4 driver since it appeared, but I dropped
	it (partly deliberatly), and then forgot all about it.
	Turns out that some systems really need this stuff, as their BIOS hasn't
	set up the IORRs.
	
	http://bugme.osdl.org/show_bug.cgi?id=1521

<grundler@parisc-linux.org>
	[libata] use sg_dma_xxx macros
	
	Fixes build on some platforms, fixes issues on others.

<pj@sgi.com>
	[PATCH] ia64: fix samp_affinity user-space accesses
	
	Here is a new improved patch for verifying user access to string
	passed in to kernel on write to /proc/irq/<pid>/smp_affinity.
	
	The access_ok() but missing __get_user() on each byte earlier patch
	has been replaced with a copy_from_user().
	
	I have built it and verified that it handles write requests
	as before, on an ia64 system (well - you can no longer pass
	more than 14 spaces after the 'R' - tough).

<zaitcev@redhat.com>
	[SPARC]: Get kbd/mouse working again with sunzilog serial.

<shemminger@osdl.org>
	[NETFILTER]: Trivial -- Get rid of warnings in netfilter if /proc is not configured on.

<davem@nuts.ninka.net>
	[TG3]: Do not drop existing GRC_MODE_HOST_STACKUP when writing to GRC_MODE.

<davem@nuts.ninka.net>
	[TG3]: Do not set RX_MODE_KEEP_VLAN_TAG when ASF is enabled.

<davem@nuts.ninka.net>
	[TG3]: Clear on-chip stats/status block after resetting flow-through queues.
	
	On systems where the config cycles might take a long time, we
	can end up with the ASF firmware using the FTQs before we get
	to resetting them.

<davem@nuts.ninka.net>
	[TG3]: Update version and release date.

<pavlin@icir.org>
	[RTNETLINK]: Add RTPROT_XORP.

<jlut@cs.hut.fi>
	[IPV6]: Neighbour discovery bypasses netfilter.

<davem@nuts.ninka.net>
	[TG3]: Update to latest non-5705 TSO firmware.

<viro@parcelfarce.linux.theplanet.co.uk>
	[netdrvr] remove manual driver poisoning of net_device
	
	Such poisoning can cause oopses either because the refcount is not
	zero when the poisoning occurs, or due to kernel debugging options
	being enabled.

<khali@linux-fr.org>
	[PATCH] I2C: i2c documentation (1 of 2)
	
	This is the document I wrote (and you reviewed) about porting client
	drivers to Linux 2.6. The retained name is "porting-clients" (in line
	with writing-clients). I won't commit it to i2c/lm_sensors2 CVS, since
	that document is of no use outside of the 2.6 kernel (and I'm bored
	keeping files in sync).

<khali@linux-fr.org>
	[PATCH] I2C: i2c documentation (2 of 2)
	
	This is a patch to writing-clients. The current version in Linux 2.6
	still mentions the old module reference counting mechanism. The patch
	brings it to the same version we have in i2c CVS, where that section has
	been updated.

<khali@linux-fr.org>
	[PATCH] I2C: Fix i2c-algo-bit for adapers that cannot read SCL back
	
	Here follows a patch to i2c-algo-bit.c as found in linux-2.6.0-test9,
	with two fixes for adapters that cannot read SCL back. Althouth real
	adapters should be able to read SCL back, there are some that
	cannot, for example the ADM1032 evaluation board I am using. Such
	adapters where supposed to be already supported, but I found a probable
	bug and improved support.
	
	These changes were applied to our i2c CVS repository two weeks ago and
	have been reviewed by Mark D. Studebaker.
	
	List of changes:
	
	* Fix sclhi() for adapters that do not have getscl().
	* Enable bit_test for adapters that do not have getscl().
	* Mostly rewrite test_bus(), cleaner and probably faster.

<khali@linux-fr.org>
	[PATCH] I2C: sysfs interface documentation
	
	1* No more current hysteresis value. I don't think we ever saw a chip
	   which monitors current, and if we ever do, I would be very, very
	   surprised if it would have an hysteresis value.
	2* Temperature input and max can have 4 values. [from the previous
	   patch]
	3* Split temperature min and hysteresis into two separate files.
	4* New file temp_crit. [from previous patch]
	
	The new file temp_crit is subject to change later as we decide more
	precisely how we want to handle values that are common to more than one
	temperature channels.

<khali@linux-fr.org>
	[PATCH] I2C: make I2C chipset drivers use temp_hyst[1-3]
	
	Summary of the changes:
	adm1021.c: No changes, that chipset uses a real min/max model.
	eeeprom.c: No changes (obviously).
	it87.c:    Remove buggy comments (obviously taken from via686a) about
	           max and min temperature limits being over and hyst. This
	           isn't the case for this driver (min/max model).
	lm75.c:    Simple sysfs file name change (temp_min to temp_hyst).
	lm78.c:    Simple sysfs file name change (temp_min to temp_hyst).
	lm85.c:    No changes needed (min/max model).
	via686a.c: Rename functions and macros from min/max to hyst/over, what
	           it really is. Remove unnecessary comments. Rename sysfs
	           files from temp_min[1-3] to temp_hyst[1-3].
	w83781d.c: Rename variables from temp_min* to temp_hyst* (needed so
	           that the macros keep working). Update macro calls
	           accordingly. Fix writing temp to max and hyst being
	           swapped.
	
	Additional remarks:
	
	The lm75 and lm78 having a single temperature channel, there is no
	number appended to the file names. Shouldn't a "1" be appended in this
	case? I think it would make it easier for the future library to catch
	all the files.
	
	I made sure the drivers would still compile after the changes, but did
	not test them otherwise (no working 2.6.0 kernel here, and not all the
	hardware anyway).

<khali@linux-fr.org>
	[PATCH] I2C: fix author of i2c-savage4.c driver
	
	This patch rehabilitates Alexander Wold as the author of the i2c-savage4
	driver. For some reason, his name was not mentioned anywhere in the
	first place.
	
	The change was requested by Alexander Wold himself.

<khali@linux-fr.org>
	[PATCH] I2C: add Serverworks CSB6 support to i2c-piix4
	
	This patch adds support for the Serverworks CSB6 to i2c-piix4 driver. It
	was confirmed to work by lasirona at yahoo dot com in support ticket
	#1424:
	http://secure.netroedge.com/~lm78/readticket.cgi?ticket=1424

<khali@linux-fr.org>
	[PATCH] I2C: add KT600 support to i2c-viapro driver
	
	This patch adds support for the KT600 to the i2c-viapro driver. It was
	confirmed to work by Lou, lm-sensors at fixit dot nospammail dot net in
	this post:
	http://archives.andrew.net.au/lm-sensors/msg05299.html

<khali@linux-fr.org>
	[PATCH] I2C: it87 and via686a alarms
	
	> it87 and via686a violate the sysfs standard by having "alarm" instead
	> of "alarms", would you please fix in your next patch?
	
	I'm not the only one allowed to send patches to Greg, you know ;)
	Anyway, here we go. Greg, here is a patch that corrects the standard
	violation reported by Mark. Tested to compile.
	
	(It also removes a useless comment in it87.c.)

<jakub@redhat.com>
	[PATCH] ia64: fix typo in vmlinux.lds.S
	
	The security init section was incorrectly using PAGE_OFFSET instead of
	LOAD_OFFSET.

<david-b@pacbell.net>
	[PATCH] USB: change cdc-acm to do RX URB processing in a tasklet
	
	Just for cdc-acm, it pushes RX URB processing into a tasklet;
	and has minor cleanups.
	
	I cc'd Vojtech since he's this driver's maintainer.  If this
	checks out, usb-serial will need similar changes.
	
	
	p.s. the issue is a WARN_ON that tells us:
	
	   >> [<c012046c>] local_bh_enable+0x8c/0x90
	   >> [<f8991452>] ppp_asynctty_receive+0x62/0xb0 [ppp_async]
	   >> [<c02144f3>] flush_to_ldisc+0xa3/0x120
	   >> [<f891f20f>] acm_read_bulk+0xbf/0x140 [cdc_acm]
	   >> [<c02684c9>] usb_hcd_giveback_urb+0x29/0x50
	   >> [<c027670c>] dl_done_list+0x11c/0x130
	   >> [<c0277075>] ohci_irq+0x85/0x170
	   >> [<c0268526>] usb_hcd_irq+0x36/0x60
	   >> [<c010aeba>] handle_IRQ_event+0x3a/0x70
	   >> [<c010b227>] do_IRQ+0x97/0x140
	   >> [<c0109624>] common_interrupt+0x18/0x20

<zaitcev@redhat.com>
	[PATCH] USB: fix comment in usblp
	
	I know Linus is not taking cleanups at this point, but perhaps
	you can delete it in your tree. Seems like someone (Oliver?)
	fixed all the garbage in old printer.c, so the comment is not
	needed anymore.
	
	I reviewed changes, and usblp.c looks correct. I'm doing backport
	to 2.4 for Fedora right now.

<jgarzik@redhat.com>
	[libata] fix use-after-free
	
	Fixes oops some were seeing on module unload.
	
	Caught by Jon Burgess.

<jgarzik@redhat.com>
	[netdrvr pcnet32] fix oops on unload
	
	Driver was calling pci_unregister_driver for each _device_, and then
	again at the end of the module unload routine.  Remove the call that's
	inside the loop, pci_unregister_driver should only be called once.
	
	Caught by Don Fry (and many others)

<jgarzik@redhat.com>
	[libata promise] Properly initialize DIMM, on SX4
	
	On-board DIMM should be sized and initialized by the driver.  Previously,
	a single DIMM size was simply (and incorrectly) assumed, and
	initialization was presumed to have been done by the card's BIOS.
	
	Contributed by Promise, updated by David Milburn @ Red Hat.

<dancy@dancysoft.com>
	[PATCH] USB: add TIOCMIWAIT support to pl2303 driver

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Command failure codes for sddr09 driver
	
	This patch updates the sdd09 subdriver to make it return Command Failure
	with appropriate sense data (rather than Tranport Error) when:
	
		a MODE-SENSE command requests an unsupported page;
	
		a CDB includes an unrecognized command code.
	
	This should help prevent confusion and excessive retrying by the SCSI
	drivers.

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Issue CBI clear_halt and fix BBB residue
	
	This patch does 2 things (bad, I know -- but they're both pretty small
	and pretty obscure).
	
	The CBI specification states in section 2.4.3.1.3 that
	
		... the host shall also issue Clear Feature for Endpoint Halt
		to the Bulk In pipe if the device reports that the Data In
		command block has Failed.
	
	along with a note in section 2.5.3 that Data Out commands should work
	analogously.  This patch does that, along with cleaning up the status
	detection logic a little.
	
	For Bulk-only transfers we currently ignore the dResidue field in the CSW,
	except for reporting it (without byte-swapping!) in a debug message.  The
	patch uses it to compute the residue value returned to the SCSI layer.
	Note that the Bulk-only spec allows devices to transfer more data than
	they actually use (i.e., they may add padding or ignore stuff) and then
	inform the host of this by means of the dResidue value.  The logic used is
	simple: our reported residue is the larger of what the device claims and
	what we didn't transfer, except that it can't be larger than the total
	transfer length.

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Fix logic error in raw_bulk.c:us_copy_to_sgbuf()
	
	This patch fixes a simple logic error in the routine that copies data from
	a driver buffer to a scatter-gather user buffer.

<david-b@pacbell.net>
	[PATCH] USB: ohci, fix iso "bad entry" bug + misc
	
	A while back there were some reports of ohci reporting a "bad entry"
	diagnostic, mostly with ISO transfers, which were mysterious until
	I recently found an easy way to reproduce it.
	
	This patch:
	
	  - Fixes at least one cause of that "bad entry" diagnostic by
	    waiting for INTR_WDH before completing ED unlink processing.
	    (Else URB unlinking could free TDs on the donelist, so the
	    WDH processing would see those entries as "bad".)
	
	  - Merges the patch from Darwin Rambo <drambo@broadcom.com>,
	    coping with CPUs that can't do 16 bit accesses (MIPS).
	
	  - Renames a function as start_ed_unlink(), matching its role.
	
	  - Fixes minor debug output issues, including a FIXME to tell
	    more info about TDs on the periodic schedule.  And adding
	    some missing newlines (makes this patch seem big).
	
	Nobody's complained much about that "bad entry" issue lately, but
	if necessary that part would be particularly easy to split out.
	
	Please merge to the next kernel that gets USB patches.

<stern@rowland.harvard.edu>
	[PATCH] USB: khubd optimization
	
	It changes spin_lock_save() to spin_lock() within the completion routine
	and list_del()/INIT_LIST_HEAD() to list_del_init().  It's nothing more
	than a minor optimization.

<stern@rowland.harvard.edu>
	[PATCH] USB: Fix khubd synchronization
	
	It improves synchronization with hub_irq() and guarantees that the hub
	disconnect() routine doesn't exit until the URB's completion routine has
	finished.

<henning@meier-geinitz.de>
	[PATCH] USB scanner driver: new device ids
	
	Added vendor/product ids for Epson, Genius, Microtek, Plustek,
	Reflecta, and Visioneer scanners. Removed ids for HP PSC devices as
	these are supported by the hpoj userspace driver.

<peter@chubb.wattle.id.au>
	[PATCH] ia64: make perfmon CONFIG_PREEMPT-safe again
	
	Here's a  fix for non-preemption safety in perfmon.c.
	
	I haven't tried it while running a preemption stress test, but this
	allows q-syscollect to work.

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Remove unneeded scatter-gather operations in sddr09
	
	This patch removes some unnecessary scatter-gather code from the sddr09
	driver.  In its place a single smaller buffer is re-used each time through
	an I/O loop, as opposed to transferring all the data at once.
	
	Andries Brouwer kindly tested this and suggested some improvements to get
	it working right.

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Enhance sddr09 to work with 64 MB SmartMedia cards
	
	This patch was written by Andries Brouwer.  It adds to sddr09 the ability
	to use 64 MB SmartMedia cards.  I have added a few minor alterations to
	make it fit in with my sequence of other patches.

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Remove dead code from debug.c
	
	This patch removes an uncalled subroutine from debug.c.  I only noticed it
	when tracking down scatter-gather usage; there didn't seem to be any
	reason to repair it since it wasn't being used anywhere.

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Fix scatter-gather buffer access in usb-storage core
	
	This patch adds a routine to protocol.c that correctly transfers data to
	or from a scatter-gather buffer.  According to Jens Axboe, we've been
	using page_address() incorrectly -- it's necessary to use kmap() instead
	-- and in fact it doesn't give the desired result when the buffers are
	located in high memory.  This could affect anyone using a system with 1 GB
	or more of RAM, and one user has already reported such a problem (as you
	know).
	
	The three fixup routines in protocol.c and usb.c have been changed to use
	the new s-g access routine.  When similar adjustments have been made to
	all the subdrivers, we will be able to eliminate the raw_bulk.c source
	file entirely.

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Change sddr09 to use the new s-g access routine
	
	This patch updates the sddr09 driver to use the new scatter-gather access
	routine.  After installing it, the user who experienced memory access
	violations says everything is now working properly.

<xose@wanadoo.es>
	[TG3]: Add new device IDs.

<oliver@neukum.org>
	[PATCH] USB: fix error return codes in usblp
	
	this fixes the questionable error return codes Paulo noticed
	in usblp. I hope I really got all cases now.

<oliver@neukum.org>
	[PATCH] USB: further cleanup in usblp
	
	somebody built his own version of be16_to_cpu(). Such things affect
	maintainability.

<greg@kroah.com>
	[PATCH] USB: fix up compiler warning in usblp driver caused by previous patches.

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Convert datafab to use the new s-g routines
	
	This patch updates the datafab driver to the new scatter-gather handling,
	which makes it safe for systems with >1GByte of memory.
	It has been tested by Eduard Hasenleithner.

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Convert jumpshot to use the new s-g routines
	
	This patch converts the jumpshot driver to use the new scatter-gather
	routines.  It has not been tested.

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Another utility scatter-gather routine
	
	This patch adds a small utility routine for storing data in a transfer
	buffer.  The next patch uses this routine quite a bit in the isd200
	driver.

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Update scatter-gather handling in the isd200 driver
	
	This patch fixes the scatter-gather handling in isd200, replacing an
	incorrect routine there with calls to the new routine added in the
	previous patch.  It also removes a couple of places where the driver
	returned data for commands that shouldn't get any (TEST-UNIT-READY and
	START-STOP).
	
	This has not been tested.

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Update scatter-gather handling in the shuttle-usbat
	
	This patch updates the shuttle_usbat driver to use the new scatter-gather
	transfer routines.  The small set of changes needed speaks well for the
	original organization of the code.
	
	This has not been tested.

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Convert sddr55 to use the new s-g routines
	
	This patch changes the sddr55 driver to make it use the new scatter-gather
	routines.  It has not been tested, but perhaps Andries Brouwer will be
	able to try it out.

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Remove unneeded raw_bulk.[ch] files, change Makefile
	
	As a result of the last round of changes, the raw_bulk source files aren't
	needed any more.  They can be deleted and the Makefile changed
	accordingly.

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Add comments explaining new s-g usage
	
	On Sun, 30 Nov 2003, Matthew Dharm wrote:
	> I'm going to pass this one along to Greg, but I think some places in this
	> could really use some better comments.  Especially the way you use a single
	> buffer inside the loop -- it took me a few minutes to figure out how your
	> logic to refresh the buffer with new data worked.
	>
	> I'm also wondering if the access_xfer_buf() function could use some more
	> header comments, stating why this is needed (i.e. spelling out the
	> kmap()-isms).
	
	Okay, here it is.  This patch basically just adds comments.  Each routine
	that uses the new scatter-gather function gets a brief explanation of
	what's going on, and access_xfer_buf() itself gets detailed comments
	saying what it's doing and why it's necessary.  You may even want to cut
	some of it back; I was pretty verbose.

<greg@kroah.com>
	[PATCH] USB storage: remove the raw_bulk.c and raw_bulk.h files as they are no longer needed.

<oliver@neukum.org>
	[PATCH] USB: sleeping problems in cyberjack driver
	
	this driver has locking problems. Here's the first round of fixes
	for the obvious cases.
	
	- it makes clear differences between completion handlers and task context
	- it fixes cases of sleeping in interrupt

<david-b@pacbell.net>
	[PATCH] USB: usb_hcd_unlink_urb() test for list membership
	
	This is a minor cleanup that replaces a test for non-null urb->hcpriv
	with "is the urb on this list".  HCDs don't need to use hcpriv in that
	way, and in general this is a safer way to test that.  (AIO does much
	the same thing in its kiocb cancelation paths.)

<shemminger@osdl.org>
	[PPPOE]: Add missing MODULE_ALIAS_NETPROTO.

<shemminger@osdl.org>
	[ROSE]: Fix use after free in socket destruction.

<shemminger@osdl.org>
	[BLUETOOTH]: Put MODULE_ALIAS_NETPROTO for PF_BLUETOOTH in af_bluetooth.c

<davidm@tiger.hpl.hp.com>
	ia64: Jim Wilson says that gcc v3.3 also supports marking ar.pfs as
		clobbered, so use ia64_spinlock_contention() for any GCC with
		v3.3 or newer.

<davidm@tiger.hpl.hp.com>
	ia64: Switch places for the gate pages and the guard page.  This improves
		backwards-compatibility with older (broken) versions of GCC which
		recognize a signal-handler only if it is in the address range
		from 0xa000000000000100. to 0xa000000000020000.

<per.winkvist@uk.com>
	[PATCH] USB storage: Make Pentax Optio S4 work
	
	The change below is needed to get the S4 camera working.
	Tested with both Optio S/S4

<fello@libero.it>
	[PATCH] USB storage: patch for Fujifilm EX-20

<stephane.galles@free.fr>
	[PATCH] USB storage: patch for Kyocera S5 camera
	
	I've seen some entries in 2.4.22 and 2.6.0 unusual_devs.h
	for Kyocera Finecam S3 et S4 cameras and I own a Finecam S5
	that does not work out of the box either
	(here is the beast : http://www.yashica.com/digital/finecams5/finecams5.html)
	
	so I found the unusual_devs.h entry and submitted it some month
	ago at http://www.qbik.ch/usb/devices/showdev.php?id=1626
	for the 2.4 kernels
	
	I thought It would be nice to have the whole Finecam family
	in Unusual_devs.h for 2.6.0
	
	The patch for the 2.6.0-test9 is attached with this mail
	
	It differs from the entry I submitted at www.qbik.ch
	as I used the new SC/PR_DEVICE flags and got rid of the
	IGNORE_SER flag from 2.4
	
	Do you want a patch for 2.4 too ? If so, I should test my
	old 2.4 entry with the lastest 2.4 Kernels, coz on a daily
	basis I use a 2.4.20, which is rather old. Moreover, I could
	used the SC/PR_DEVICE flags too for 2.4.22 (keeping the IGNORE_SER flag
	though)
	
	
	By the way, several entries with the running patch :
	
	/proc/bus/usb/devices :
	
	T:  Bus=03 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=12  MxCh= 0
	D:  Ver= 1.10 Cls=00(>ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
	P:  Vendor=0482 ProdID=0103 Rev= 1.00
	C:* #Ifs= 1 Cfg#= 1 Atr=c0 MxPwr=  2mA
	I:  If#= 0 Alt= 0 #EPs= 2 Cls=08(stor.) Sub=06 Prot=50 Driver=usb-storage
	E:  Ad=81(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
	E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
	I:  If#= 0 Alt= 1 #EPs= 3 Cls=ff(vend.) Sub=06 Prot=50 Driver=usb-storage
	E:  Ad=81(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
	E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms
	E:  Ad=83(I) Atr=03(Int.) MxPS=   8 Ivl=32ms

<mbp@samba.org>
	[PATCH] USB storage: add unusual storage device entry for Minolta DiMAGE
	
	Yes, it seems to work OK on the 7i with this updated patch.  I don't
	have a 7 or 7Hi to try, but everything on the web seems to say the USB
	firmware works the same way.

<davidm@tiger.hpl.hp.com>
	ia64: Based on patch by Jerome Marchand: Add ia64-optimized
		atomic_dec_and_lock().  Actually, this could be the generic
		version for any platform that has cmpxchg().

<stern@rowland.harvard.edu>
	[PATCH] USB storage: unusual_devs.h entry revision
	
	Here is another update for unusual_devs.h in both 2.6 and 2.4.  No
	urgency.
	
	
	On Wed, 12 Nov 2003, Aris Basic wrote:
	
	> Device Sony Memory Stick Reader MSAC-US1
	> usb-storage: This device (054c,002d,0100 S 04 P 01) has unneeded SubClass and Protocol entries in unusual_devs.h
	>    Please send a copy of this message to <linux-usb-devel@lists.sourceforge.net>
	
	Thanks for sending this in.

<ebrower@usa.net>
	[SPARC64]: SUNW,lombus device has nonstandard ebus child regs too.

<herbert@gondor.apana.org.au>
	[PATCH] USB Storage: freecom dvd-rw fx-50 usb-ide patch

<alexander@all-2.com>
	[PATCH] USB storage: patch for unusual_devs.h
	
	I send a patch and copy of /proc/bus/usb/devices for my 5`25 external
	USB enclosure. I don't know exactly manufacturer of this device, but
	model is CD-509.
	It will be nice if it helps somebody else.
	
	
	T:  Bus=01 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=12  MxCh= 2
	B:  Alloc= 93/900 us (10%), #Int=  1, #Iso=  0
	D:  Ver= 1.00 Cls=09(hub  ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
	P:  Vendor=0000 ProdID=0000 Rev= 0.00
	S:  Product=USB UHCI Root Hub
	S:  SerialNumber=14a0
	C:* #Ifs= 1 Cfg#= 1 Atr=40 MxPwr=  0mA
	I:  If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
	E:  Ad=81(I) Atr=03(Int.) MxPS=   8 Ivl=255ms
	T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=1.5 MxCh= 0
	D:  Ver= 1.10 Cls=00(>ifc ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
	P:  Vendor=045e ProdID=0040 Rev= 3.00
	S:  Manufacturer=Microsoft
	S:  Product=Microsoft 3-Button Mouse with IntelliEye(TM)
	C:* #Ifs= 1 Cfg#= 1 Atr=a0 MxPwr=100mA
	I:  If#= 0 Alt= 0 #EPs= 1 Cls=03(HID  ) Sub=01 Prot=02 Driver=usbmouse
	E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=10ms
	T:  Bus=01 Lev=01 Prnt=01 Port=01 Cnt=02 Dev#= 15 Spd=12  MxCh= 0
	D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
	P:  Vendor=05e3 ProdID=0701 Rev= 0.02
	S:  Product=USB TO IDE
	C:* #Ifs= 1 Cfg#= 1 Atr=c0 MxPwr= 96mA
	I:  If#= 0 Alt= 0 #EPs= 2 Cls=08(stor.) Sub=06 Prot=50 Driver=usb-storage
	E:  Ad=81(I) Atr=02(Bulk) MxPS=  64 Ivl=0ms
	E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=0ms

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Another unusual_devs.h update
	
	On Thu, 20 Nov 2003, Stefan J. Betz wrote:
	
	> Hello People,
	>
	> i have some Mitsumi USB Floppy Drive with the following Data:
	> Manufactur: Mitsumi
	> Typ       : D353FUE
	>
	> When i plug this Device into my Linux Box (Kernel 2.6.0-test9), i get
	> the following messages in my Syslog:
	>
	> Nov 20 22:17:57 mobileone kernel: hub 1-0:1.0: new USB device on port 1, assigned address 2
	> Nov 20 22:17:57 mobileone kernel: usb-storage: This device (03ee,6901,0100 S 04 P 00) has unneeded SubClass and Protocol entries in unusual_devs.h
	> Nov 20 22:17:57 mobileone kernel:    Please send a copy of this message to <linux-usb-devel@lists.sourceforge.net>
	> Nov 20 22:17:57 mobileone kernel: scsi2 : SCSI emulation for USB Mass Storage devices
	> Nov 20 22:17:57 mobileone kernel:   Vendor: MITSUMI   Model: USB FDD           Rev: 1039
	> Nov 20 22:17:57 mobileone kernel:   Type:   Direct-Access                      ANSI SCSI revision: 02
	> Nov 20 22:17:57 mobileone kernel: Attached scsi generic sg2 at scsi2, channel 0, id 0, lun 0,  type 0
	
	> I that is enough information to Support that drive (or how can i use ist
	> today?)
	>
	> Greeting Betz Stefan
	
	Thank you for sending this in.  The usb-storage driver will be updated
	sometime after 2.6.0-final is released.
	
	Alan Stern

<berentsen@sent5.uni-duisburg.de>
	[PATCH] USB storage: Minolta Dimage S414 usb patch
	
	here I submitt you the vendor/id patch for the
	Minolta Dimage S414 Camera,
	which runs fine with the usb under linux.
	
	cat /proc/bus/usb/device ->

<_nessuno_@katamail.com>
	[PATCH] USB storage: Medion 6047 Digital Camera
	
	...a patch for the "Medion 6047 Digital Camera"
	
	
	
	*** a/drivers/usb/storage/unusual_devs.h	Sun Nov 23 22:31:51 2003

<stern@rowland.harvard.edu>
	[PATCH] USB storage: Unusual_devs.h addition
	
	This patch adds to unusual_devs.h an entry reported by Andries Brouwer and
	it moves another entry to the correct position in the numerical ordering.

<aviro@parcelfarce.linux.theplanet.co.uk>
	[NET]: Fix missing netdev unregister/free in netrom and rose protocols.
	
	Also, fix a object size vs. pointer size thinko.

<davej@redhat.com>
	[AGPGART] Remove duplicate programming of AGP command register.
	We do this in agp_device_command() which gets called below, so we
	remove the explicit pci_write_config_dword()
	
	Spotted by Bjorn Helgaas.

<mdharm-usb@one-eyed-alien.net>
	[PATCH] USB: don't send any MODE SENSE commands to usb mass storage devices
	
	This patch basically eliminates the use of MODE_SENSE or MODE_SENSE_10 for
	direct-access USB storage devices.  That $&%*! command has caused us more
	trouble than all the others combined, and after more than a year we still
	don't have a good way of handling/using them.
	
	I constantly get complaints about devices which don't work because of the
	way 2.5/6 uses MODE_SENSE and MODE_SENSE_10 -- this patch will greatly
	increase compatiblity with devices.  As with the patch to limit transfer
	sizes, I'd like to see this applied as soon as possible.
	
	Matt
	
	> ----- Forwarded message from Patrick Mansfield <patmans@us.ibm.com> -----
	>
	> Date: Thu, 20 Nov 2003 08:28:27 -0800
	> From: Patrick Mansfield <patmans@us.ibm.com>
	> Subject: [PATCH] don't send any MODE SENSE commands to usb mass storage devices
	> To: mdharm-scsi@one-eyed-alien.net
	
	Matthew -
	
	Is this patch in your queue? I don't see it in Linus' tree yet.
	
	Don't send any MODE SENSE commands to usb mass storage devices.

<greg@kroah.com>
	[PATCH] USB: add support for another pl2303 device
	
	Info came from John Zhuge <john.zhuge@troposnetworks.com>

<tchen@on-go.com>
	[PATCH] USB: fix io_edgeport driver alignment issues.

<tchen@on-go.com>
	[PATCH] USB: fix bug when errors happen in ioedgeport driver

<trini@org.rmk.(none)>
	[SERIAL] Fix a problem with 8250 UARTs on PPC
	
	Patch from Tom Rini.
	
	If we don't change the divisor, we don't want to change what we claim
	as the uart clock either.  Without this I don't get a usable serial
	console on my Motorola Sandpoint.

<stern@rowland.harvard.edu>
	[PATCH] USB: Allow configuration #0
	
	This patch helped Jon Wilson.  It allows devices to have a configuration
	numbered 0, in spite of the standard convention that config #0 really
	means unconfigured.

<greg@kroah.com>
	[PATCH] USB: add support for Sony UX50 device to visor driver
	
	Thanks to Ralf Dietrich <ralle@envicon.de> for the information.

<nemosoft@smcc.demon.nl>
	[PATCH] USB: PWC 8.12 driver update
	
	Attached you will find patches that will bring the Philips Webcam driver
	(PWC) up to version 8.12. The most important new feature is support for
	the motorized pan & tilt feature of the new Logitech QuickCam
	Orbit/Sphere, which I don't think is in the stores yet (at least it's
	not on Logitech's website), but should be there soon. In addition, the
	documentation in the kernel about the cams is updated.

<dhollis@davehollis.com>
	[PATCH] USB: Mark AX8817x usbnet driver as non-experimental
	
	Trivial patch to remove the Experimental mark on the AX8817x driver
	portion of usbnet.  The driver seems to have made the rounds enough and
	is working quite well.

<petkan@nucleusys.com>
	[PATCH] USB: pegasus driver update
	
	  another vendor/deviceID added;
	  HAS_HOME_PNA flag for ADM8511 devices - that should
	  make HomePNA users happy;

<david-b@pacbell.net>
	[PATCH] USB: usb driver binding fixes
	
	There are problems lurking in the driver binding code for usb,
	with highlights being disagreements about:
	
	    (a) locks: usb bus writelock v. BKL v. driver->serialize
	    (b) driver: interface.driver v. interface.dev.driver
	
	Fixing those is going to take multiple patches, and I thought
	I'd start out with a small one that's relatively simple.  This:
	
	    - Cleans up locking.
	
	        * Updates comments and kerneldoc to reflect that the
	          usb bus writelock is what protects against conflicts
	          when binding/unbinding drivers to devices.
	
	        * Removes driver->serialize ... not needed, since
	          it's only gotten when the bus writelock is held.
	
	        * Removes incorrect "must have BKL" comments, and one
	          bit of code that tried to use BKL not the writelock.
	
	    - Removes inconsistencies about what driver is bound to the
	      interface ... for now "interface.driver" is "the truth".
	
	        * usb_probe_interface() will no longer clobber bindings
	          established with usb_driver_claim_interface().
	
	        * usb_driver_release_interface() calls device_release_driver()
	          for bindings established with probe(), so the driver model
	          updates (sysfs etc) are done as expected.
	
	        * usb_unbind_interface() doesn't usb_driver_release_interface(),
	          since release() should eventually _always_ call unbind()
	          (indirectly through device_release_driver).
	
	Essentially there are two driver binding models in USB today,
	and this patch makes them start to cooperate properly:
	
	   - probe()/disconnect(), used by most drivers.  This goes
	     through the driver model core.
	
	   - claim()/release(), used by CDC drivers (ACM, Ethernet)
	     and audio to claim extra interfaces and by usbfs since it
	     can't come in through probe().  Bypasses driver model.
	
	That interface.driver pointer can be removed by changing the
	claim()/release() code to use the driver model calls added
	for that purpose:  device_{bind,release}_driver().  I didn't
	do that in this patch, since it'll have side effects like
	extra disconnect() calls that drivers will need to handle.
	
	A separate usbfs patch is needed to fix its driver binding;
	mostly just to use the right lock, but those changes were
	more extensive and uncovered other issues.  (Like, I think,
	some that Duncan has been noticing ...)

<davidm@tiger.hpl.hp.com>
	ia64: Fix bug discovered by Bill Nottingham & Jakub Jelinek where
		put_user() arguments with function-calls would cause the
		macro to return unexpected values.  Fixed by avoiding macro
		argument evaluation while r8/r9 are in use for exception-handling
		purposes.  Also, consolidated access-macros so that GCC and
		Intel compiler use 90% the same code.

<davidm@tiger.hpl.hp.com>
	ia64: Fix ivt overflow that occurred when turning on
		CONFIG_DISABLE_VHPT.

<davidm@tiger.hpl.hp.com>
	ia64: Fix compiler warning in intrinsics.h.

<david-b@pacbell.net>
	[PATCH] USB: <linux/usb_ch9.h> new descriptor codes, types
	
	This patch adds definitions:
	
	  - New "video" class, for video cameras and more complicated devices;
	
	  - New "Interface association" descriptor type, used by video class,
	    along with two other assigned desciptor type codes (OTG, "debug")
	    listed in the same ECN to the USB 2.0 spec;
	
	  - Type declarations for "Interface association" and OTG descriptors.
	
	It also replaces three copies of USB_DT_CS_* declarations in audio
	support with one in <linux/usb_ch9.h>, and uses the newly exposed
	symbol in "usbnet".  (Near as I can tell, the convention for those
	"class specific" descriptor types started with audio, and was then
	adopted by several other class specifications.)

<viro@parcelfarce.linux.theplanet.co.uk>
	[netdrvr bonding] use destructor to properly free net device
	
	(required because of driver's use of rtnl_lock/unlock)

<akpm@osdl.org>
	[PATCH] Re: Deadlock in 3c574_cs.c (fwd)
	
	Patch looks fine to me, thanks.   I've queued up the below.
	
	
	From: Ville Nuorvala <vnuorval@tcs.hut.fi>
	
	I've experienced random lockups witch become almost certain under heavy
	loads, like when doing ping6 -f. The culprit seems to be the 3c574_cs
	driver, which locks lp->window_lock twice when calling update_stats() from
	el3_interrupt().
	
	
	
	 drivers/net/pcmcia/3c574_cs.c |   15 +++++++++------
	 1 files changed, 9 insertions(+), 6 deletions(-)

<dtor_core@ameritech.net>
	[PATCH] Fwd: Re: Atmel - possible SKB leak?
	
	Jeff,
	
	Atmel driver in 2.6.0-test11 is leaking SKBs if card gets disassociated
	from an AP when it's about to transfer packet. Simon (atmel maintainer)
	is OK with the patch. Given the fact that we are leaking memory I think
	it may be beneficial to push it to Linus (if you like the patch).
	
	Dmitry
	
	===================================================================
	
	
	ChangeSet@1.1517, 2003-12-11 01:44:56-05:00, dtor_core@ameritech.net
	  NET: atmel - do not leak SKBs when dropping packets
	
	
	 atmel.c |    6 ++++--
	 1 files changed, 4 insertions(+), 2 deletions(-)
	
	
	===================================================================

<davidm@tiger.hpl.hp.com>
	ia64: Bring export of spin-lock contention-routines in sync with
		this change:  Jim Wilson says that gcc v3.3 also supports
		marking ar.pfs as clobbered, so use ia64_spinlock_contention()
		for any GCC with v3.3 or newer.

<nathans@sgi.com>
	[XFS] Add the noikeep mount option, make ikeep the default for now.
	
	SGI Modid: 2.5.x-xfs:slinx:162621a

<nathans@sgi.com>
	[XFS] Fix a possible bio-leak on I/O submission, in a case where no I/O was required.
	
	SGI Modid: 2.5.x-xfs:slinx:163119a

<Michael_E_Brown@Dell.com>
	[libata] fake geometry for partition tables / setups that need such

<jgarzik@redhat.com>
	[libata] move geometry code to libata-scsi

<nathans@bruce.melbourne.sgi.com>
	[XFS] Update XFS documentation.

<jgarzik@redhat.com>
	[libata] update new geometry code for 2.6.x specifics not present in 2.4

<rddunlap@osdl.org>
	[PATCH] cpqfcTSinit cleanup
	
	patch_name:	drivers_clean.patch
	patch_version:	2003-09-09.17:01:58
	author:		Randy.Dunlap <rddunlap@osdl.org>
	description:	fix to remove these warnings:
	  drivers/scsi/cpqfcTSinit.c:1583: warning: unused variable `timeout'
	  drivers/scsi/cpqfcTSinit.c:1584: warning: unused variable `retries'
	  drivers/scsi/cpqfcTSinit.c:1585: warning: unused variable `scsi_cdb'
	  drivers/scsi/cpqfcTSinit.c:471: warning: `my_ioctl_done' defined but not used
	product:	Linux
	product_versions: 2.6.0-test6
	changelog:	ifdef around my_ioctl_done();
			write a new, smaller version of cpqfcTS_TargetDeviceReset(),
			but keep the previous version for future updates;
	maintainer:	Chase Maupin (support@compaq.com)
	diffstat:	=
	 drivers/scsi/cpqfcTSinit.c |   17 +++++++++++++----
	 1 files changed, 13 insertions(+), 4 deletions(-)

<dougg@torque.net>
	[PATCH] scsi_debug lk 2.6.0t6
	
	This small patch adds a "release" method to the "pseudo_0"
	device to stop the noise when the scsi_debug module is
	loaded.
	
	Another annoyance that I was unable to get to the bottom
	of was during "rmmod scsi_debug" **:
	  Synchronizing SCSI cache for disk sda: <4>FAILED
	    status = 0, message = 00, host = 1, driver = 00
	That is a DID_NO_CONNECT error. So the LLD host is
	being shut down before the sd driver gets a chance to
	send through a SYNCHRONIZE CACHE command. If the user
	instigates a rmmod (as distinct from the hardware
	saying the host/device is gone), shouldn't a window
	be left open for such a flushing type command. This
	problem seems to have appeared recently.
	
	
	** "echo -1 > add_host" in scsi_debug's driver directory
	   (i.e. remove a host) also causes the same error so the
	   problem is not perculiar to rmmod.

<bdschuym@pandora.be>
	[BRIDGE NETFILTER]: Fix leaks and crashes in SKB handling.
	
	- Missing nf bridge info put in ip_copy_metadata()
	- Do not store nf bridge private info in the SKB control block,
	  parts of IPv4 use that area too and this causes corruption.

<patmans@us.ibm.com>
	[PATCH] consolidate and log scsi command on send and completion
	
	Consolidate and nicely log the scsi_device and scsi command before sending
	and after completing a command to an adapter driver.

<rddunlap@osdl.org>
	[PATCH] buslogic: use EH, remove some dup. docs
	
	patch_name:	buslogic_ehupdate_v3.patch
	patch_version:	2003-10-02.14:10:32
	author:		Randy.Dunlap <rddunlap@osdl.org>
	description:	update BusLogic driver to use current SCSI
			  error handling model;
			remove duplicate doc comments -- use
			  Documentation/scsi/BusLogic.txt only;
	product:	Linux
	product_versions: 2.6.0-test6
	diffstat:	=
	 Documentation/scsi/BusLogic.txt |    2
	 drivers/scsi/BusLogic.c         |  229 ++--------------------------------------
	 2 files changed, 16 insertions(+), 215 deletions(-)

<ak@muc.de>
	[PATCH] Fix 64bit warnings in BusLogic driver
	
	During a make allyesconfig on x86-64 I noticed several integer/pointer
	mismatch warnings in the bus logic driver.

<ak@muc.de>
	[PATCH] Mark correct aha152x driver (PCMCIA) as !64BIT
	
	As Matthew Wilcox pointed out - the ISA aha152x driver was already marked
	as ISA only, so couldn't have been enabled on x86-64.
	
	The warning I saw was actually for the PCMCIA aha152x driver.
	
	Mark that one as !64BIT

<ak@muc.de>
	[PATCH] Mark aha152x as ISA and !64BIT driver II
	
	On Tue, Oct 07, 2003 at 07:33:23PM +0200, Andi Kleen wrote:
	>
	> aha152x seems to be not 64bit safe and spews out warnings on x86-64.
	> As I think it's a ISA only driver anyways I just marked it as
	> ISA only and !64BIT for Alpha's sake.
	
	
	Matthew Wilcox pointed out that it was already marked ISA only.
	I actually ment to change another driver, but looking at the source of one
	it seems to be 64bit unclean too.
	
	As there are 64bit architectures that have ISA slots (like old Alphas)
	I think this patch is still appropiate.
	
	-Andi

<ak@muc.de>
	[PATCH] Mark Ninja SCSI driver as !64BIT
	
	Ninjas don't seem to like 64bit. The driver spew out so many
	integer/pointer mismatch warnings that I gave up.
	
	Mark it as !64BIT
	
	-Andi

<jejb@mulgrave.(none)>
	[PATCH] sym 2.1.18f
	
	From: 	Matthew Wilcox <willy@debian.org>
	
	2.1.18f:
	 - Rewrite the Kconfig help
	 - Always honour CONFIG_SCSI_SYM53C8XX_IOMAPPED.  Alpha people used to
	   have it forced off, Sparc people used to have it forced on.  (Thanks
	   to Dann Frazier for testing on Alpha)
	 - Simplify the NVRAM handling a bit.
	 - SYM_OPT_NO_BUS_MEMORY_MAPPING is never set.
	 - Remove PCI DMA abstraction.  (Christoph Hellwig)
	 - Redo SCSI midlayer registration and unregistration to allow module
	   load/unload to work.  Now copes with scsi_add_host() failing.  (Thanks
	   to Brian King for testing)
	 - Replace bcmp() with memcmp().
	 - Change the MAINTAINER entry to myself.

<rask@sygehus.dk>
	[PATCH] aha1740.c: Allow level triggered interrupts to be shared
	
	Hi.
	
	The patch below (against 2.6.0-test8) makes it possible to share the
	interrupt when the aha1740 is configured for a level triggered interrupt.
	It appears to work fine on my i486 EISA box with an AHA-1742A and an NE3200
	Ethernet board sharing an irq. Comments, please.

<jejb@mulgrave.(none)>
	[PATCH] MPT Fusion driver 2.05.00.05 update
	
	From: 	Moore, Eric Dean <emoore@lsil.com>
	
	2.05.00.05 changes
	* error handling fixes, e.g. use of host_lock 
	
	2.05.00.04 changes
	* removed __init from mptscsih_setup
	* removed __init from get_setup_token
	* changed copyright from 2002 to 2003
	* added new mailto, and removed Pam.Delaney
	* added some fix for 32bit emulation when unloading mptctl module
	

<jgarzik@redhat.com>
	[libata promise] fix another ugly bug
	
	For the SX4, only one Host DMA (local DIMM) engine is on the hardware,
	while there is an ATA engine for each SATA port.  This means that
	Host DMA transactions must be queued.  When previously fixing this problem
	(the driver had previously assumed an HDMA engine per port), I stored
	the HDMA packet queue in a per-port data structure.
	
	This was incorrect:  this patch changes it to correctly use a
	per-host data structure, not a per-port structure.

<jejb@mulgrave.(none)>
	sg: char_devs + seq_file lk2.6.0t9
	
	From: 	Douglas Gilbert <dougg@torque.net>
	
	This is an updated patch for the sg driver that takes into
	account Patrick LaVarre's fix for negative reserved buffer
	sizes found in lk 2.6.0-test9.
	
	So it has the same changelog to the patch I sent on 2003/10/11:
	     - add "struct cdev" [char_devs] objects to increase
	       maximum number of sg devices from 256 to 8192
	     - use seq_file interface for /proc/scsi/sg/*
	       pseudo files
	     - sysfs symlinks between the sysfs scsi device and the
	       corresponding sg cdev node (and vice versa)
	
	An edited "tree" output showing an example of these symlinks
	was included in my previous post.
	
	As noted in another thread, st (and osst) may need "cdevs"
	and sysfs symlinks so SCSI tape devices have sysfs visibility
	in lk 2.6 .
	
	Also if both st and sg had sysfs visibility then Patrick
	Mansfield's scsi_id program could be made to work for tape
	drives (enclosures, tape robots, etc) by following these
	symlinks.

<jejb@mulgrave.(none)>
	sg: fix hch/dougg mismerge
	
	Need to remove access_count from new seq_file code

<hch@lst.de>
	[PATCH] convert inia100 to new probing API
	
	Hi Doug,
	
	you've been the last who touched inia100.c, so I may assume you
	actually have the hardware?  I've updated the driver to the new
	pci probing and scsi host registration code and it would be cool
	if someone could test it so we could merge it into early 2.6.

<hch@infradead.org>
	[PATCH] aacraid updates for new probing APIs
	
	On Wed, Nov 19, 2003 at 12:48:28PM +0000, Christoph Hellwig wrote:
	> On Tue, Nov 18, 2003 at 01:29:22PM -0800, Mark Haverkamp wrote:
	> > > +	pci_set_master(pdev);
	> > > +	pci_set_dma_mask(pdev, 0xFFFFFFFFULL);
	> >
	> > I've been told that the return value of this should be checked as it is
	> > possible for it to fail.
	>
	> Indeed.  This patches objective was to convert aacraid to the new-style
	> probing, not to fix bugs, but I'll add the fix to the next revision of
	> the patch anyway.
	
	Ok here's a new patch.  Updates:
	
	  - check pci_set_dma_mask return value
	  - fix leak in the HBA remove path
	  - fix leak in probe_one failure case
	  - remove unused list of hosts
	  - avoid scsi.h usage all over driver
	  - mention the updates in the README file

<mikenc@us.ibm.com>
	[PATCH] [RFC]  fix compile erros in ini9100 driver
	
	The attached patch fixes the compile errors from the DMA and scsi_cmnd
	next usage. It has been tested on bugzilla here:
	http://bugzilla.kernel.org/show_bug.cgi?id=213
	
	I was not sure about the variable casting in the driver, but this is how
	the qlogicisp driver did it. The driver also still needs to be converted
	to the new error handling.

<khali@linux-fr.org>
	[PATCH] I2C: fix i2c-amd8111 driver.
	
	This patch fixes i2c_smbus_write_byte() being broken for i2c-amd8111.
	This causes trouble when that module is used together with eeprom (which
	is also in 2.6). We have had no report so far, but the problem is
	similar to the one addressed by a recent patch to i2c-nforce2.
	
	Credits go to Hans-Frieder Vogt for finding and fixing the problem. Mark
	D. Studebaker found and fixed the original problem in i2c-nforce2.
	
	This is a serious bug fix, and I believe you shouldn't wait too long
	before applying it.

<khali@linux-fr.org>
	[PATCH] I2C: restore support for AMD8111 in i2c-amd756 driver
	
	This patch restores support for the AMD8111 in the i2c-amd756 driver.
	
	Credits go to Philip Pokorny for the original patch. I tweaked it a bit.
	
	This isn't a bug fix and can be delayed until after 2.6.0 if you want.

<mhoffman@lightlink.com>
	[PATCH] I2C: improve chip detection in w83781d.c driver
	
	This patch improves chip detection.  It was forward ported from the
	lm_sensors project CVS, from these revisions:
	
		1.104 (Khali) Enhance chip detection (stricter).
		1.108 (Khali) Fix W83627HF detection.

<mhoffman@lightlink.com>
	[PATCH] I2C: remove initialization of limits by w83781d driver
	
	This patch is from the lm_sensors project CVS, from this revision:
	
		1.111 (mds) remove initialization of limits by driver
	
	It is better to set these limits by a combination of /etc/sensors.conf
	and 'sensors -s'; "mechanism not policy." And what's not to like about
	a patch that removes 163 lines?

<mhoffman@lightlink.com>
	[PATCH] I2C: remove initialization of limits by lm75 driver
	
	This patch is from the lm_sensors project CVS, from this revision:
	
		1.44 (mds) remove initialization of limits by driver
	
	It is better to set these limits by a combination of /etc/sensors.conf
	and 'sensors -s'; "mechanism not policy."

<mhoffman@lightlink.com>
	[PATCH] I2C: lm75 chip driver conversion routine fixes
	
	This patch is based on the lm_sensors project CVS, from revisions 1.45 and 1.1
	of lm75.c and lm75.h, respectively.
	
	The patch fixes the conversion routines (according to datasheet) and moves
	them into a header file - as these conversions can be used by several drivers
	which emulate LM75s as subclients.  Also, temps are now reported in 1/1000 C
	in sysfs as per documentation.

<davem@nuts.ninka.net>
	[SPARC64]: On Sabre, only access PCI controller config space specially.

<dtor_core@am