<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:stdio="http://www.mulesoft.org/schema/mule/stdio"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.0/mule.xsd
       http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/3.0/mule-jms.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.0/mule-http.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.0/mule-vm.xsd
       http://www.mulesoft.org/schema/mule/stdio http://www.mulesoft.org/schema/mule/stdio/3.0/mule-stdio.xsd
       "
        >

    <vm:connector name="vmConnector" queueEvents="true"/>

    <jms:activemq-connector name="jmsConnector" brokerURL="vm://localhost"/>

    <model name="vmModel">
        <service name="vmService">
            <inbound>
                <http:inbound-endpoint address="http://localhost:9756/orders" synchronous="true">
                    <byte-array-to-string-transformer/>
                </http:inbound-endpoint>
                <jms:inbound-endpoint queue="orders.in">
                    <transformers>
                        <jms:jmsmessage-to-object-transformer/>
                    </transformers>
                </jms:inbound-endpoint>
            </inbound>
            <outbound>
                <pass-through-router>
                    <vm:outbound-endpoint address="vm://order.validation"/>
                </pass-through-router>
            </outbound>
        </service>

        <service name="Order Validation">
            <inbound>
                <vm:inbound-endpoint address="vm://order.validation"/>
            </inbound>
            <component class="com.clood.order.OrderValidationService">
                <method-entry-point-resolver>
                    <include-entry-point method="validateOrder"/>
                </method-entry-point-resolver>
            </component>
            <outbound>
                <pass-through-router>
                    <vm:outbound-endpoint path="order.dispatch"/>
                </pass-through-router>
            </outbound>
        </service>

        <service name="Order Dispatch">
            <inbound>
                <vm:inbound-endpoint path="vm:order.dispatch"/>
            </inbound>
            <outbound>
                <static-recipient-list-router>
                    <recipients>
                        <spring:value>jms://order.submission.ops</spring:value>
                        <spring:value>jms://order.submission.sales</spring:value>
                    </recipients>
                </static-recipient-list-router>
            </outbound>
        </service>

        <!--
        <service name="Console Receiver">
            <inbound>
                <jms:inbound-endpoint queue="order.submission.ops"/>
                <jms:inbound-endpoint queue="order.submission.sales"/>
            </inbound>
            <outbound>
                <pass-through-router>
                    <stdio:outbound-endpoint system="OUT"/>
                </pass-through-router>
            </outbound>
        </service> -->


        <!-- <queue-profile persistent="true" maxOutstandingMessages="1000"/> -->
    </model>
</mule>
