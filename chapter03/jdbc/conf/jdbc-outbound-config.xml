<mule xmlns="http://www.mulesource.org/schema/mule/core/2.1"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:file="http://www.mulesource.org/schema/mule/file/2.1"
       xmlns:jms="http://www.mulesource.org/schema/mule/jms/2.1"
       xmlns:jdbc="http://www.mulesource.org/schema/mule/jdbc/2.1"
       xmlns:xm="http://www.mulesource.org/schema/mule/xml/2.1"
       xmlns:stdio="http://www.mulesource.org/schema/mule/stdio/2.1"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.mulesource.org/schema/mule/core/2.1 http://www.mulesource.org/schema/mule/core/2.1/mule.xsd
       http://www.mulesource.org/schema/mule/file/2.1 http://www.mulesource.org/schema/mule/file/2.1/mule-file.xsd
       http://www.mulesource.org/schema/mule/jms/2.1 http://www.mulesource.org/schema/mule/jms/2.1/mule-jms.xsd
       http://www.mulesource.org/schema/mule/jdbc/2.1 http://www.mulesource.org/schema/mule/jdbc/2.1/mule-jdbc.xsd
       http://www.mulesource.org/schema/mule/xml/2.1 http://www.mulesource.org/schema/mule/xml/2.1/mule-xml.xsd
       http://www.mulesource.org/schema/mule/stdio/2.1 http://www.mulesource.org/schema/mule/stdio/2.1/mule-stdio.xsd"
>

    <file:connector name="FileConnector" 
        streaming="false"
        autoDelete="true"
        pollingFrequency="1000"  />

<global-property name="jms.url" value="vm://localhost"/>

<spring:beans>
    <spring:import resource="spring-config.xml"/>
</spring:beans>

<jms:activemq-connector name="jmsConnector" specification="1.1" brokerURL="${jms.url}" />

<jdbc:connector name="jdbcConnector"  dataSource-ref="dataSource">
    <jdbc:query key="alertInsert" value="insert into alerts values (0,'esb01',${payload})"/>
</jdbc:connector>

<model name="jdbcOutboundModel">
       <service name="jdbcOutboundService">
            <inbound>
                <file:inbound-endpoint path="./in"/>
            </inbound>
            <outbound>
                <pass-through-router>
                    <jdbc:outbound-endpoint  queryKey="alertInsert"/>
                </pass-through-router>
            </outbound>
        </service>

       <service name="JMS Inbound">
            <inbound>
                   <jms:inbound-endpoint queue="alerts"> 
                        <jms:jmsmessage-to-object-transformer/>
                   </jms:inbound-endpoint> 
            </inbound>
            <outbound>
                <pass-through-router>
                    <stdio:outbound-endpoint system="OUT"/>
                </pass-through-router>
            </outbound>
        </service>
 
  </model>
</mule>
