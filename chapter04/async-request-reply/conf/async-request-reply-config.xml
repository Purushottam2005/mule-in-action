<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
      xmlns:xm="http://www.mulesoft.org/schema/mule/xml"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:stdio="http://www.mulesoft.org/schema/mule/stdio"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.0/mule.xsd
       http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/3.0/mule-jms.xsd
       http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/3.0/mule-xml.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.0/mule-vm.xsd
       http://www.mulesoft.org/schema/mule/stdio http://www.mulesoft.org/schema/mule/stdio/3.0/mule-stdio.xsd
       "
        >

    <!-- Reference an external Spring configuratioon -->
    <spring:beans>
        <spring:import resource="spring-config.xml"/>
    </spring:beans>

    <stdio:connector name="stdioConnector" messageDelayTime="1000" promptMessage="Enter a destination: "/>

    <jms:activemq-connector name="jmsConnector" brokerURL="vm://localhost"/>

    <model name="asyncRequestReplyModel">

        <!-- Accept farm requests on a VM inbound endpoint and use the async-reply router to gather VM counts
        from remote VM farms and accept then return the lowest -->
        <service name="asyncRequestReplyService">
            <inbound>
                <vm:inbound-endpoint address="vm://farmRequests" synchronous="true">
                    <message-properties-transformer>
                        <add-message-property key="MULE_CORRELATION_GROUP_SIZE" value="3"/>
                    </message-properties-transformer>
                </vm:inbound-endpoint>
            </inbound>
            <outbound>
                <multicasting-router>
                    <vm:outbound-endpoint path="farm1"/>
                    <vm:outbound-endpoint path="farm2"/>
                    <vm:outbound-endpoint path="farm3"/>

                    <!-- Replies from each outbound endpoint will be sent to this queue -->
                    <reply-to address="vm://farmResponses"/>
                </multicasting-router>
            </outbound>

            <async-reply>
                <vm:inbound-endpoint address="vm://farmResponses"/>
                <custom-async-reply-router class="com.muleinaction.FarmResponseAggregator"/>
            </async-reply>

        </service>

        <!-- Simulate a VM Farm -->
        <service name="farm1">
            <inbound>
                <vm:inbound-endpoint path="farm1" synchronous="true"/>
            </inbound>
            <component>
                <method-entry-point-resolver>
                    <include-entry-point method="getFarmStatus"/>
                </method-entry-point-resolver>
                <spring-object bean="farmService1"/>
            </component>
        </service>

        <!-- Simulate a VM Farm -->
        <service name="farm2">
            <inbound>
                <vm:inbound-endpoint path="farm2" synchronous="true"/>
            </inbound>
            <component>
                <method-entry-point-resolver>
                    <include-entry-point method="getFarmStatus"/>
                </method-entry-point-resolver>
                <spring-object bean="farmService2"/>
            </component>
        </service>

        <!-- Simulate a VM Farm -->
        <service name="farm3">
            <inbound>
                <vm:inbound-endpoint path="farm3" synchronous="true"/>
            </inbound>
            <component>
                <method-entry-point-resolver>
                    <include-entry-point method="getFarmStatus"/>
                </method-entry-point-resolver>
                <spring-object bean="farmService3"/>
            </component>
        </service>

        <!-- A "client" to accept requests from the console and broker them to a VM endpoint -->
        <service name="asyncClient">
            <inbound>
                <stdio:inbound-endpoint name="client" system="IN" connector-ref="stdioConnector"/>
            </inbound>
            <outbound>
                <chaining-router>
                    <vm:outbound-endpoint path="farmRequests"/>
                    <stdio:outbound-endpoint system="OUT"/>
                </chaining-router>
            </outbound>
        </service>

    </model>

</mule>
